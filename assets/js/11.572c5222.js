(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{364:function(e,n,t){"use strict";t.r(n);var r=t(42),o=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"command-line-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-line-usage"}},[e._v("#")]),e._v(" Command-line usage")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("antimicrox [OPTIONS] [PROFILE]\n")])])]),t("h2",{attrs:{id:"description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[e._v("#")]),e._v(" Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("--tray")]),t("br"),e._v("\nlaunch program in system tray only")]),e._v(" "),t("li",[t("strong",[e._v("--no-tray")]),t("br"),e._v("\nlaunch program with the tray menu disabled")]),e._v(" "),t("li",[t("strong",[e._v("-h")]),e._v(", "),t("strong",[e._v("--help")]),t("br"),e._v("\ndisplay this help and exit")]),e._v(" "),t("li",[t("strong",[e._v("-v")]),e._v(", "),t("strong",[e._v("--version")]),t("br"),e._v("\noutput version information and exit")]),e._v(" "),t("li",[t("strong",[e._v("--profile")]),e._v(" "),t("em",[e._v("<location>")]),t("br"),e._v("\nuse specified profile as default for selected controllers. Defaults to all controllers.")]),e._v(" "),t("li",[t("strong",[e._v("--profile-controller")]),e._v(" "),t("em",[e._v("<value>")]),t("br"),e._v("\napply configuration file to a specific controller. <value> can be an controller index, name, or GUID.")]),e._v(" "),t("li",[t("strong",[e._v("--hidden")]),t("br"),e._v("\nlaunch program without the main window")]),e._v(" "),t("li",[t("strong",[e._v("--unload")]),e._v(" "),t("em",[e._v("[<value>]")]),t("br"),e._v("\nunload currently enabled profile(s). Value can be a controller index, name, or GUID.")]),e._v(" "),t("li",[t("strong",[e._v("--startSet")]),e._v(" "),t("em",[e._v("<number>")]),e._v(" "),t("em",[e._v("[<value>]")]),t("br"),e._v("\nstart joysticks on a specific set. Value can be a controller index, name, or GUID.")]),e._v(" "),t("li",[t("strong",[e._v("--next")]),t("br"),e._v("\nAdvance profile loading set options.")]),e._v(" "),t("li",[t("strong",[e._v("-d")]),e._v(", "),t("strong",[e._v("--daemon")]),t("br"),e._v("\nlaunch program as a daemon.")]),e._v(" "),t("li",[t("strong",[e._v("--log-level")]),e._v(" "),t("em",[e._v("{debug,info,warn}")]),t("br"),e._v("\nEnable logging. Default: warn")]),e._v(" "),t("li",[t("strong",[e._v("-l")]),e._v(", "),t("strong",[e._v("--list")]),t("br"),e._v("\nPrint information about joysticks detected by SDL.")]),e._v(" "),t("li",[t("strong",[e._v("--map")]),e._v(" "),t("em",[e._v("<value>")]),t("br"),e._v("\nOpen game controller mapping window of selected controller. Value can be a controller index or GUID.")]),e._v(" "),t("li",[t("strong",[e._v("--eventgen")]),e._v(" "),t("em",[e._v("{xtest,uinput}")]),t("br"),e._v("\nChoose between using XTest support and uinput support for event generation. Default: xtest.")])])])}),[],!1,null,null,null);n.default=o.exports}}]);